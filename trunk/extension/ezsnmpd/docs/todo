to do (roughly ordered by priority):

- add title to mib/html view

+ begin work on creating plugins templates via xml the same way as snmp/mib/$type does (prtg, cacti)

+ add support for sending traps via a php call that runs the external command snmptrap

+ settle on a list of MIBs, gettable and settable
  - finish stats from ggsysinfo to status mib: cache/storage files in cluster modes; etc...
  - finish counters imported from ezmunin (missing: nbr. of cache-block and view-cache templates)
  - add other info from eZP admin interface:
    - active sessions count
	- logged in users count
	- upgrade_check (ok/ko)
  - nodes, objects, classes, users (full info, identified by id, in a separate branch/handler, using tabular notation)
  - pending items count (drafts and items waiting for approval)
  - object count per version
  - running workflows
  - a set of common db corruption cases tests (make this independent for maximum reuse)
  - etc...

+ facilitate process of creating MIBs with tables (eg. write a tutorial)

+ test active monitoring of eZP mib (ie. sending traps) via snmpd.conf/disman: does it work with the 'pass' api?

+ add a new handler for testing external resources: dbs, ldaps, urls - reusing code from internal poller but allowing user to specify his own list: oid => resource spec

+ add plugins with config for std pollers: nagios, cacti, munin, opensnmp, zenoss, hyperic, zabbix, ... ganglia, collected?

+ make a 2nd getnext html result tpl (use 2nd param in url ?) that links to self, making traversal easier

+ alter API so that we can have a full base MIB even when handlers are disabled (using STATUS description for oids to indicate enabled/disabled) ?

+ add a build script - it should both rebuild plugins (unless they're built using views)

+ write a 2nd version of the settings module based on tables (since some files are allowed to grow the settings they contain)

+ add unit tests

+ allow a per-oid limitation on get, set and getnext views (and walk too, by consequence)

+ add a wizard to simplify creation of new handlers (take js code for tree building from phpxmlrpc)

+ fix cli script not working if called from an eZP install with symlinks (side-effect of snmp agent not executing script from within ezp root dir) => test on linux

+ find a way not to increase session count when getting values via http

+ add support for getting many values in a single get call (as snmpget does in bulk mode)

+ test extensively support for the set command (in 'pass' mode try changing siteaccess via '-a' option)

+ fix usage of pass_persist mode (test it), letting handlers to know if they can cache internal data structures or not

+ test: disconnect from db after every status query, to avoid keeping resources occupied, in both pass and pass_persist mode

+ finish ini settings mib: add support for array values, writing settings

+ generate a SMIv2 MIB that has conformance groups set so that smilint will not complain

+ ...

+ profit!!!