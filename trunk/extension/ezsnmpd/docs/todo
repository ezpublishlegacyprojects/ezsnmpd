to do:

+ add support for tabular values (see http://oreilly.com/perl/excerpts/system-admin-with-perl/twenty-minute-snmp-tutorial.html for tables tutorial, rfc1155 and rfc2578 for ref)
  advantage: nr. of rows does not need to be known at mib generation time
  disadvantage: might need to support non-numeric identifiers (column ids) - test using snmpget in numeric mode to see what is returned for existing tables (eg in tcp tree)
                might be hard to properly implement a sort algorithm
				breaking compatibility with current version of the mib

+ fix cli script not working if called from an eZP install with symlinks (side-effect of snmp agent not executing script from within ezp root dir) => test on linux

+ test active monitoring of eZP mib via snmpd.conf/disman: does it work with the 'pass' api?

+ add support for sending traps via a cronjob that runs the external command snmptrap (nb: via snmpd.conf, the standard net-snmp agent can do monitoring on its own, is it worth doing it from within eZP?)

+ settle on a list of MIBs, gettable and settable
  - finish stats from ggsysinfo to status mib: cache/storage files in cluster modes; etc...
  - finish counters imported from ezmunin (missing: nbr. of cache-block and view-cache templates)
  - add other info from eZP admin interface:
    - active sessions count
	- logged in users count
	- upgrade_check (ok/ko)
  - nodes, objects, classes, users (full info, identified by id, in a separate branch/handler)
  - pending items count (drafts and items waiting for approval)
  - object count per version
  - running workflows
  - a set of common db corruption cases tests
  -  etc...

+ add plugins with config for std pollers: nagios, cacti, munin, opensnmp, zenoss, hyperic, zabbix, ...

+ allow a per-oid limitation on get, set and getnext views (and walk too, by consequence)

+ add a self-hosted html version of the mib, for the terminally lazy (nb: it looks like it needs an ASN1 parser, which is all but trivial)

+ facilitate process of creating MIBs at the same time as handlers (see settings handler as base for code and a standard array format)

+ find a way not to increase session count when getting values via http

+ add support for getting many values in a single get call (as snmpget does)

+ test extensively support for the set command (in 'pass' mode try changing siteaccess via '-a' option)

+ fix usage of pass_persist mode (test it), letting handlers to know if they can cache internal data structures or not

+ test: disconnect from db after every status query, to avoid keeping resources occupied, in both pass and pass_persist mode

+ finish ini settings mib: add support for array values, writing settings

+ generate a SMIv2 MIB that has conformance groups set so that smilint will not complain

+ add a fetch function to retrieve and set oid values from within templates

+ ...

+ profit!!!
